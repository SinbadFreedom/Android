互联网协议和支持
****************

本章介绍的模块实现了互联网协议并支持相关技术。 它们都是用 Python 实现
的。 这些模块中的大多数都需要存在依赖于系统的模块 "socket" ，目前大多
数流行平台都支持它。 这是一个概述：

* "webbrowser" --- 方便的Web浏览器控制器

  * 浏览器控制器对象

* "cgi" --- Common Gateway Interface support

  * 概述

  * 使用cgi模块。

  * Higher Level Interface

  * 函数

  * Caring about security

  * Installing your CGI script on a Unix system

  * Testing your CGI script

  * Debugging CGI scripts

  * Common problems and solutions

* "cgitb" --- Traceback manager for CGI scripts

* "wsgiref" --- WSGI Utilities and Reference Implementation

  * "wsgiref.util" -- WSGI environment utilities

  * "wsgiref.headers" -- WSGI response header tools

  * "wsgiref.simple_server" -- a simple WSGI HTTP server

  * "wsgiref.validate" --- WSGI conformance checker

  * "wsgiref.handlers" -- server/gateway base classes

  * 示例

* "urllib" --- URL 处理模块

* "urllib.request" --- 用于打开 URL 的可扩展库

  * Request Objects

  * OpenerDirector Objects

  * BaseHandler Objects

  * HTTPRedirectHandler Objects

  * HTTPCookieProcessor Objects

  * ProxyHandler Objects

  * HTTPPasswordMgr Objects

  * HTTPPasswordMgrWithPriorAuth Objects

  * AbstractBasicAuthHandler Objects

  * HTTPBasicAuthHandler Objects

  * ProxyBasicAuthHandler Objects

  * AbstractDigestAuthHandler Objects

  * HTTPDigestAuthHandler Objects

  * ProxyDigestAuthHandler Objects

  * HTTPHandler Objects

  * HTTPSHandler Objects

  * FileHandler Objects

  * DataHandler Objects

  * FTPHandler Objects

  * CacheFTPHandler Objects

  * UnknownHandler Objects

  * HTTPErrorProcessor Objects

  * 示例

  * Legacy interface

  * "urllib.request" Restrictions

* "urllib.response" --- urllib 使用的 Response 类

* "urllib.parse" --- Parse URLs into components

  * URL Parsing

  * Parsing ASCII Encoded Bytes

  * Structured Parse Results

  * URL Quoting

* "urllib.error" --- urllib.request 引发的异常类

* "urllib.robotparser" --- robots.txt 语法分析程序

* "http" --- HTTP 模块

  * HTTP 状态码

* "http.client" --- HTTP 协议客户端

  * HTTPConnection 对象

  * HTTPResponse 对象

  * 示例

  * HTTPMessage Objects

* "ftplib" --- FTP protocol client

  * FTP Objects

  * FTP_TLS Objects

* "poplib" --- POP3 protocol client

  * POP3 Objects

  * POP3 Example

* "imaplib" --- IMAP4 protocol client

  * IMAP4 Objects

  * IMAP4 Example

* "nntplib" --- NNTP protocol client

  * NNTP Objects

    * Attributes

    * 方法

  * Utility functions

* "smtplib" ---SMTP协议客户端

  * SMTP Objects

  * SMTP Example

* "smtpd" --- SMTP Server

  * SMTPServer Objects

  * DebuggingServer Objects

  * PureProxy Objects

  * MailmanProxy Objects

  * SMTPChannel Objects

* "telnetlib" --- Telnet client

  * Telnet Objects

  * Telnet Example

* "uuid" --- UUID objects according to **RFC 4122**

  * 示例

* "socketserver" --- A framework for network servers

  * Server Creation Notes

  * Server Objects

  * Request Handler Objects

  * 示例

    * "socketserver.TCPServer" Example

    * "socketserver.UDPServer" Example

    * Asynchronous Mixins

* "http.server" --- HTTP 服务器

* "http.cookies" --- HTTP state management

  * Cookie Objects

  * Morsel Objects

  * 示例

* "http.cookiejar" --- Cookie handling for HTTP clients

  * CookieJar and FileCookieJar Objects

  * FileCookieJar subclasses and co-operation with web browsers

  * CookiePolicy Objects

  * DefaultCookiePolicy Objects

  * Cookie Objects

  * 示例

* "xmlrpc" --- XMLRPC 服务端与客户端模块

* "xmlrpc.client" --- XML-RPC client access

  * ServerProxy Objects

  * DateTime 对象

  * Binary Objects

  * Fault Objects

  * ProtocolError Objects

  * MultiCall Objects

  * Convenience Functions

  * Example of Client Usage

  * Example of Client and Server Usage

* "xmlrpc.server" --- Basic XML-RPC servers

  * SimpleXMLRPCServer Objects

    * SimpleXMLRPCServer Example

  * CGIXMLRPCRequestHandler

  * Documenting XMLRPC server

  * DocXMLRPCServer Objects

  * DocCGIXMLRPCRequestHandler

* "ipaddress" --- IPv4/IPv6 manipulation library

  * Convenience factory functions

  * IP Addresses

    * Address objects

    * Conversion to Strings and Integers

    * 运算符

      * Comparison operators

      * Arithmetic operators

  * IP Network definitions

    * Prefix, net mask and host mask

    * Network objects

    * 运算符

      * Logical operators

      * Iteration

      * Networks as containers of addresses

  * Interface objects

    * 运算符

      * Logical operators

  * Other Module Level Functions

  * Custom Exceptions
