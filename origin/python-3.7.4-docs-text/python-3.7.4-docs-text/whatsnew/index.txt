Python 有什么新变化？
*********************

这个“Python 有什么新变化？”系列内容会带您浏览 Python 大版本之间重要的
变化。在新版发布后，如果您希望掌握最新变化，请务必阅读这些内容。

* Python 3.7 有什么新变化

  * 摘要 - 发布重点

  * 新的特性

  * 其他语言特性修改

  * 新增模块

  * 改进的模块

  * C API 的改变

  * 构建的改变

  * 性能优化

  * 其他 CPython 实现的改变

  * 已弃用的 Python 行为

  * 已弃用的 Python 模块、函数和方法

  * 已弃用的 C API 函数和类型

  * 平台支持的移除

  * API 与特性的移除

  * 移除的模块

  * Windows 专属的改变

  * 移植到 Python 3.7

  * Python 3.7.1 中的重要变化

  * Python 3.7.2 中的重要变化

* Python 3.6 有什么新变化A

  * 摘要 - 发布重点

  * 新的特性

  * 其他语言特性修改

  * 新增模块

  * 改进的模块

  * 性能优化

  * Build and C API Changes

  * 其他改进

  * 弃用

  * 移除

  * 移植到Python 3.6

  * Python 3.6.2 中的重要变化

  * Python 3.6.4 中的重要变化

  * Python 3.6.5 中的重要变化

  * Python 3.6.7 中的重要变化

* Python 3.5 有什么新变化

  * 摘要 - 发布重点

  * 新的特性

  * 其他语言特性修改

  * 新增模块

  * 改进的模块

  * Other module-level changes

  * 性能优化

  * Build and C API Changes

  * 弃用

  * 移除

  * Porting to Python 3.5

  * Notable changes in Python 3.5.4

* What's New In Python 3.4

  * 摘要 - 发布重点

  * 新的特性

  * 新增模块

  * 改进的模块

  * CPython Implementation Changes

  * 弃用

  * 移除

  * Porting to Python 3.4

  * Changed in 3.4.3

* What's New In Python 3.3

  * 摘要 - 发布重点

  * PEP 405: Virtual Environments

  * PEP 420: Implicit Namespace Packages

  * PEP 3118: New memoryview implementation and buffer protocol
    documentation

  * PEP 393: Flexible String Representation

  * PEP 397: Python Launcher for Windows

  * PEP 3151: Reworking the OS and IO exception hierarchy

  * PEP 380: Syntax for Delegating to a Subgenerator

  * PEP 409: Suppressing exception context

  * PEP 414: Explicit Unicode literals

  * PEP 3155: Qualified name for classes and functions

  * PEP 412: Key-Sharing Dictionary

  * PEP 362: Function Signature Object

  * PEP 421: Adding sys.implementation

  * Using importlib as the Implementation of Import

  * 其他语言特性修改

  * A Finer-Grained Import Lock

  * Builtin functions and types

  * 新增模块

  * 改进的模块

  * 性能优化

  * Build and C API Changes

  * 弃用

  * Porting to Python 3.3

* What's New In Python 3.2

  * PEP 384: Defining a Stable ABI

  * PEP 389: Argparse Command Line Parsing Module

  * PEP 391:  Dictionary Based Configuration for Logging

  * PEP 3148:  The "concurrent.futures" module

  * PEP 3147:  PYC Repository Directories

  * PEP 3149: ABI Version Tagged .so Files

  * PEP 3333: Python Web Server Gateway Interface v1.0.1

  * 其他语言特性修改

  * New, Improved, and Deprecated Modules

  * 多线程

  * 性能优化

  * Unicode

  * 编解码器

  * 文档

  * IDLE

  * Code Repository

  * Build and C API Changes

  * Porting to Python 3.2

* What's New In Python 3.1

  * PEP 372: Ordered Dictionaries

  * PEP 378: Format Specifier for Thousands Separator

  * 其他语言特性修改

  * New, Improved, and Deprecated Modules

  * 性能优化

  * IDLE

  * Build and C API Changes

  * Porting to Python 3.1

* What's New In Python 3.0

  * Common Stumbling Blocks

  * Overview Of Syntax Changes

  * Changes Already Present In Python 2.6

  * Library Changes

  * **PEP 3101**: A New Approach To String Formatting

  * Changes To Exceptions

  * Miscellaneous Other Changes

  * Build and C API Changes

  * 性能

  * Porting To Python 3.0

* What's New in Python 2.7

  * The Future for Python 2.x

  * Changes to the Handling of Deprecation Warnings

  * Python 3.1 Features

  * PEP 372: Adding an Ordered Dictionary to collections

  * PEP 378: Format Specifier for Thousands Separator

  * PEP 389: The argparse Module for Parsing Command Lines

  * PEP 391: Dictionary-Based Configuration For Logging

  * PEP 3106: Dictionary Views

  * PEP 3137: The memoryview Object

  * 其他语言特性修改

  * New and Improved Modules

  * Build and C API Changes

  * Other Changes and Fixes

  * Porting to Python 2.7

  * New Features Added to Python 2.7 Maintenance Releases

  * Acknowledgements

* Python 2.6 有什么新变化

  * Python 3.0

  * Changes to the Development Process

  * PEP 343: The 'with' statement

  * PEP 366: Explicit Relative Imports From a Main Module

  * PEP 370: Per-user "site-packages" Directory

  * PEP 371: The "multiprocessing" Package

  * PEP 3101: Advanced String Formatting

  * PEP 3105: "print" As a Function

  * PEP 3110: Exception-Handling Changes

  * PEP 3112: Byte Literals

  * PEP 3116: New I/O Library

  * PEP 3118: Revised Buffer Protocol

  * PEP 3119: Abstract Base Classes

  * PEP 3127: Integer Literal Support and Syntax

  * PEP 3129: Class Decorators

  * PEP 3141: A Type Hierarchy for Numbers

  * 其他语言特性修改

  * New and Improved Modules

  * Deprecations and Removals

  * Build and C API Changes

  * Porting to Python 2.6

  * Acknowledgements

* What's New in Python 2.5

  * PEP 308: Conditional Expressions

  * PEP 309: Partial Function Application

  * PEP 314: Metadata for Python Software Packages v1.1

  * PEP 328: Absolute and Relative Imports

  * PEP 338: Executing Modules as Scripts

  * PEP 341: Unified try/except/finally

  * PEP 342: New Generator Features

  * PEP 343: The 'with' statement

  * PEP 352: Exceptions as New-Style Classes

  * PEP 353: Using ssize_t as the index type

  * PEP 357: The '__index__' method

  * 其他语言特性修改

  * New, Improved, and Removed Modules

  * Build and C API Changes

  * Porting to Python 2.5

  * Acknowledgements

* What's New in Python 2.4

  * PEP 218: Built-In Set Objects

  * PEP 237: Unifying Long Integers and Integers

  * PEP 289: Generator Expressions

  * PEP 292: Simpler String Substitutions

  * PEP 318: Decorators for Functions and Methods

  * PEP 322: Reverse Iteration

  * PEP 324: New subprocess Module

  * PEP 327: Decimal Data Type

  * PEP 328: Multi-line Imports

  * PEP 331: Locale-Independent Float/String Conversions

  * 其他语言特性修改

  * New, Improved, and Deprecated Modules

  * Build and C API Changes

  * Porting to Python 2.4

  * Acknowledgements

* What's New in Python 2.3

  * PEP 218: A Standard Set Datatype

  * PEP 255: Simple Generators

  * PEP 263: Source Code Encodings

  * PEP 273: Importing Modules from ZIP Archives

  * PEP 277: Unicode file name support for Windows NT

  * PEP 278: Universal Newline Support

  * PEP 279: enumerate()

  * PEP 282: The logging Package

  * PEP 285: A Boolean Type

  * PEP 293: Codec Error Handling Callbacks

  * PEP 301: Package Index and Metadata for Distutils

  * PEP 302: New Import Hooks

  * PEP 305: Comma-separated Files

  * PEP 307: Pickle Enhancements

  * Extended Slices

  * 其他语言特性修改

  * New, Improved, and Deprecated Modules

  * Pymalloc: A Specialized Object Allocator

  * Build and C API Changes

  * Other Changes and Fixes

  * Porting to Python 2.3

  * Acknowledgements

* What's New in Python 2.2

  * 概述

  * PEPs 252 and 253: Type and Class Changes

  * PEP 234: Iterators

  * PEP 255: Simple Generators

  * PEP 237: Unifying Long Integers and Integers

  * PEP 238: Changing the Division Operator

  * Unicode Changes

  * PEP 227: Nested Scopes

  * New and Improved Modules

  * Interpreter Changes and Fixes

  * Other Changes and Fixes

  * Acknowledgements

* What's New in Python 2.1

  * 概述

  * PEP 227: Nested Scopes

  * PEP 236: __future__ Directives

  * PEP 207: Rich Comparisons

  * PEP 230: Warning Framework

  * PEP 229: New Build System

  * PEP 205: Weak References

  * PEP 232: Function Attributes

  * PEP 235: Importing Modules on Case-Insensitive Platforms

  * PEP 217: Interactive Display Hook

  * PEP 208: New Coercion Model

  * PEP 241: Metadata in Python Packages

  * New and Improved Modules

  * Other Changes and Fixes

  * Acknowledgements

* Python 2.0 有什么新变化

  * 概述

  * What About Python 1.6?

  * New Development Process

  * Unicode

  * 列表推导式

  * Augmented Assignment

  * 字符串的方法

  * Garbage Collection of Cycles

  * Other Core Changes

  * Porting to 2.0

  * Extending/Embedding Changes

  * Distutils: Making Modules Easy to Install

  * XML Modules

  * Module changes

  * New modules

  * IDLE Improvements

  * Deleted and Deprecated Modules

  * Acknowledgements

这个“更新日志”是 Misc/NEWS.d 目录下 构建文件 的 HTML 版本，它包含了对
当前 Python 版本进行的 *所有* 重要的更改。

* 更新日志

  * Python 下一版

  * Python 3.7.4 final

  * Python 3.7.4 release candidate 2

  * Python 3.7.4 release candidate 1

  * Python 3.7.3 最终版

  * Python 3.7.3 发布候选版 1

  * Python 3.7.2 最终版

  * Python 3.7.2 发布候选版 1

  * Python 3.7.1 最终版

  * Python 3.7.1 RC 2版本

  * Python 3.7.1 发布候选版 1

  * Python 3.7.0 正式版

  * Python 3.7.0 release candidate 1

  * Python 3.7.0 beta 5

  * Python 3.7.0 beta 4

  * Python 3.7.0 beta 3

  * Python 3.7.0 beta 2

  * Python 3.7.0 beta 1

  * Python 3.7.0 alpha 4

  * Python 3.7.0 alpha 3

  * Python 3.7.0 alpha 2

  * Python 3.7.0 alpha 1

  * Python 3.6.6 final

  * Python 3.6.6 RC 1

  * Python 3.6.5 final

  * Python 3.6.5 release candidate 1

  * Python 3.6.4 final

  * Python 3.6.4 release candidate 1

  * Python 3.6.3 final

  * Python 3.6.3 release candidate 1

  * Python 3.6.2 final

  * Python 3.6.2 release candidate 2

  * Python 3.6.2 release candidate 1

  * Python 3.6.1 final

  * Python 3.6.1 release candidate 1

  * Python 3.6.0 final

  * Python 3.6.0 release candidate 2

  * Python 3.6.0 release candidate 1

  * Python 3.6.0 beta 4

  * Python 3.6.0 beta 3

  * Python 3.6.0 beta 2

  * Python 3.6.0 beta 1

  * Python 3.6.0 alpha 4

  * Python 3.6.0 alpha 3

  * Python 3.6.0 alpha 2

  * Python 3.6.0 alpha 1

  * Python 3.5.5 final

  * Python 3.5.5 release candidate 1

  * Python 3.5.4 final

  * Python 3.5.4 release candidate 1

  * Python 3.5.3 final

  * Python 3.5.3 release candidate 1

  * Python 3.5.2 final

  * Python 3.5.2 release candidate 1

  * Python 3.5.1 final

  * Python 3.5.1 release candidate 1

  * Python 3.5.0 final

  * Python 3.5.0 release candidate 4

  * Python 3.5.0 release candidate 3

  * Python 3.5.0 release candidate 2

  * Python 3.5.0 release candidate 1

  * Python 3.5.0 beta 4

  * Python 3.5.0 beta 3

  * Python 3.5.0 beta 2

  * Python 3.5.0 beta 1

  * Python 3.5.0 alpha 4

  * Python 3.5.0 alpha 3

  * Python 3.5.0 alpha 2

  * Python 3.5.0 alpha 1
